<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.timi.timizhuo.dao.mapper.UserDao" >
	<resultMap id="UserResultMap" type="com.timi.timizhuo.dao.model.UserModel" >
		<id column="USER_ID" property="userId" jdbcType="VARCHAR" />
		<result column="USERNAME" property="username" jdbcType="VARCHAR" />
    	<result column="PASSWORD" property="password" jdbcType="VARCHAR" />
    	<result column="NICKNAME" property="nickname" jdbcType="VARCHAR" />
    	<result column="PIC" property="pic" jdbcType="VARCHAR" />
    	<result column="LOVE_TIMI_DECLARATION" property="loveTimiDeclaration" jdbcType="VARCHAR" />
    	<result column="PERSONAL_PROFILE" property="personalProfile" jdbcType="VARCHAR" />
    	<result column="CREATE_TIME" property="createTime" jdbcType="TIMESTAMP" />
		<result column="UPDATE_TIME" property="updateTime" jdbcType="TIMESTAMP" />
	</resultMap>
  
	<!-- 根据用户名查询婷迷用户信息   -->
	<select id="findUserByUsername" resultMap="UserResultMap" parameterType="java.lang.String">
		SELECT USER_ID, USERNAME, PASSWORD, NICKNAME, PIC, LOVE_TIMI_DECLARATION, PERSONAL_PROFILE, CREATE_TIME, UPDATE_TIME FROM TIMI_USER WHERE USERNAME = #{username}
	</select>

	<!-- 根据用户名用昵称查询婷迷用户信息 -->
	<select id="findUserByUsernameOrNickname" resultMap="UserResultMap" parameterType="UserModel">
		SELECT USER_ID, USERNAME, PASSWORD, NICKNAME, PIC, LOVE_TIMI_DECLARATION, PERSONAL_PROFILE, CREATE_TIME, UPDATE_TIME FROM TIMI_USER WHERE USERNAME = #{username} OR NICKNAME = #{nickname}
	</select>
	
	<select id="findUserByUsernameAndPassword" resultMap="UserResultMap" parameterType="UserModel">
		SELECT USER_ID, USERNAME, PASSWORD, NICKNAME, PIC, LOVE_TIMI_DECLARATION, PERSONAL_PROFILE, CREATE_TIME, UPDATE_TIME FROM TIMI_USER WHERE USERNAME = #{username} and PASSWORD = #{password}
	</select>
  
	<!-- 插入一条婷迷用户数据 -->
	<insert id="insert" parameterType="UserModel">
		INSERT INTO TIMI_USER (
			USER_ID,
			USERNAME, 
			PASSWORD, 
			NICKNAME, 
			PIC,
			LOVE_TIMI_DECLARATION,
			PERSONAL_PROFILE
		) VALUES ( 
			UUID(), 
			#{username}, 
			#{password},
			#{nickname}, 
			#{pic},
			#{loveTimiDeclaration},
			#{personalProfile}
		)
	</insert>
	
	<!-- 根据用户名修改婷迷用户数据 -->
	<update id="updateByUsername" parameterType="UserModel">
		UPDATE TIMI_USER
		<set>
			<if test="password != null and password != ''">
				PASSWORD = #{password},
			</if>
			<if test="pic != null and pic != ''">
				PIC = #{pic},
			</if>
			<if test="loveTimiDeclaration != null and loveTimiDeclaration != ''">
				LOVE_TIMI_DECLARATION = #{loveTimiDeclaration},
			</if>
			<if test="personalProfile != null and personalProfile != ''">
				PERSONAL_PROFILE = #{personalProfile},
			</if>
		</set>
		WHERE USERNAME = #{username}
	</update>
</mapper>